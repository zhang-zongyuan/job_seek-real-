@page "/apps/"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]

<h3 class="card-title"> Apps</h3>
<a href="/apps/create" class="btn btn-secondary">
    <span class="oi oi-plus"></span>
    Create New App
</a>
<br />
<br />

@if (Apps == null)
{
    <div class="alert alert-info">Loading Apps...</div>
}
else
{
    <table class="table table-responsive" id="appsTable">
        <thead>
            <tr>
                <th> App Id </th>
                <th> Customer  </th>
                <th> Date </th>
                <th> Duration in days </th>
                <th> Comapny Name </th>
                <th> Actions </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var app in Apps)
            {
            <tr>
                <td> @app.Id </td>
                <td> @app.Customer.Resume </td>
                <td> @app.Customer.Resume </td>
                <td> @app.DateCreated.Date.ToString("dd MMMM yyyy") </td>
                <td>@(app.DateIn != null ? (app.DateIn.Value - app.DateOut).TotalDays.ToString() : "To Be Determined")</td>
                <td> @app.Job.Location </td>
                <td>
                    <a href="/apps/view/@app.Id" class="btn btn-primary">
                        <span class="oi oi-book"></span>
                    </a>
                    <a href="/apps/edit/@app.Id" class="btn btn-warning">
                        <span class="oi oi-pencil"></span>
                    </a>
                    <button class="btn btn-danger" @onclick="@(()=>Delete(app.Id))">
                        <span class="oi oi-delete"></span>
                    </button>
                </td>
            </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<App> Apps;
    private DateTime nullDT = new DateTime(1, 1, 1, 0, 0, 0);



    protected async override Task OnInitializedAsync()
    {
        Apps = await _client.GetFromJsonAsync<List<App>>($"{Endpoints.AppsEndpoint}");
    }



    async Task Delete(int appId)
    {
        var app = Apps.First(q => q.Id == appId);
        var confirm = await js.InvokeAsync<bool>("Confirm", $"Do you want to delete {app.Id}?");
        if (confirm)
        {
            await _client.DeleteAsync($"{Endpoints.AppsEndpoint}/{appId}");
            await OnInitializedAsync();
        }
    }
}
